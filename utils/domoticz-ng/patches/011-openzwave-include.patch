From 632695fe3ee704c1c1c539d79172ac0f9f9ce77b Mon Sep 17 00:00:00 2001
From: David Woodhouse <dwmw2@infradead.org>
Date: Thu, 4 Jun 2020 12:41:27 +0100
Subject: [PATCH] Fix up OpenZWave include path handling
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

The path specified by the pkg-config file will be, for example,
/usr/include/openzwave.

That directory needs to be on the compiler's include path, because
OpenZWave's own include files assume they can include each other
simply as (e.g.) "ValueIDIndexes.h"; not "openzwave/ValueIDIndexes.h"

Our own files do include <openzwave/Foo.h> though, which means that
the *parent* directory needs to be on the compilers's include path
too. We generally get lucky because /usr/include is automatically
included, so we find /usr/include/openzwave/Foo.h anyway.

Fix our C files to rely on the correct include path discovered from
pkg-config, and to include OpenZWave headers by name without the
erroneous openzwave/ prefix.

That means we can fix the ../open-zwave-read-only static build to use
the header files directly from there just like it does the static
library .a file, without requiring the 'sudo make install' step — and
without suffering a mismatch of static openzwave build vs. headers of
a different version that were installed on the system, which could
previously happen.

Tested with both static and dynamic builds of OpenZWave.
---
 CMakeLists.txt                             | 11 ++++-------
 hardware/OpenZWave.cpp                     |  8 ++++----
 hardware/openzwave/control_panel/ozwcp.cpp | 10 +++++-----
 hardware/openzwave/control_panel/ozwcp.h   |  4 ++--
 4 files changed, 15 insertions(+), 18 deletions(-)

Index: domoticz-805fee10fd609a02182eaa01e99bcb4b1b560426/CMakeLists.txt
===================================================================
--- domoticz-805fee10fd609a02182eaa01e99bcb4b1b560426.orig/CMakeLists.txt
+++ domoticz-805fee10fd609a02182eaa01e99bcb4b1b560426/CMakeLists.txt
@@ -27,6 +27,7 @@ option(USE_BUILTIN_SQLITE "Use builtin s
 
 # Optional dependencies
 option(USE_PYTHON "Use Python for Plugins and Event-Scripts" YES)
+option(USE_OPENZWAVE "Use OpenZWave as Hardware" YES)
 option(INCLUDE_LINUX_I2C "Include I2C support" YES)
 option(INCLUDE_SPI "Include SPI support" YES)
 option(WITH_LIBUSB "Enable libusb support" YES)
@@ -687,6 +688,7 @@ ENDIF(WITH_LIBUSB)
 # OpenZWave
 # try to find open-zwave, if found, include support
 #
+IF(USE_OPENZWAVE)
 IF(USE_STATIC_OPENZWAVE)
   find_library(OpenZWave NAMES libopenzwave.a HINTS "../open-zwave-read-only" "../open-zwave-read-only/cpp/build")
   get_filename_component(OpenZWave_dir ${OpenZWave} DIRECTORY)
@@ -715,6 +717,7 @@ IF(OpenZWave)
 ELSE()
   MESSAGE(STATUS "==== OpenZWave not found, support disabled!")
 ENDIF(OpenZWave)
+ENDIF(USE_OPENZWAVE)
 
 IF(EXISTS /sys/class/gpio)
   message(STATUS "GPIO is available")
